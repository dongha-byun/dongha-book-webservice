language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

# 빌드 파일을 S3로 보내는 설정
before_deploy:
  #- zip -r dongha-book-webservice *
  #- mkdir -p deploy
  #- mv dongha-book-webservice.zip deploy/dongha-book-webservice.zip
  - mkdir -p before-deploy # zip 에 포함시킹 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy 로 이동 후, 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리 이동 후, deploy 폴더 생성
  - mv before-deploy/before-deploy.zip deploy/dongha-book-webservice.zip # deploy 로 zip 파일 이동

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings 에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings 에 설정된 값

    bucket: dongha-book-webservice-build # S3 버킷 명
    region: ap-northeast-2
    skip_cleanup: true

    acl: private # zip 파일 접근을 private 로
    local_dir: deploy # before_deploy 에서 생성한 디렉터리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings 에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings 에 설정된 값

    bucket: dongha-book-webservice-build # S3 버킷 명
    key: dongha-book-webservice.zip # 빌드파일을 이 이름으로 생성
    bundle_type: zip # 압축 확장자
    application: dongha-service # AWS 에서 생성한 CodeDeploy 애플리케이션 이름
    deployment_group: dongha-service # AWS 에서 생성한 CodeDeploy 애플리케이션의 배포 그룹 이름
    region: ap-northeast-2
    wait-until-deployed: true


# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - byunsw4@naver.com

